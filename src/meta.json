{
"name": "token.py",
"version": "0.0.1",
"since": "2021-08-12T00:00:00+09:00",
"url": "https://github.com/ytyaru/Python.AccessToken.20210820093132",
"license": {
    "name": "CC0-1.0",
    "url": "https://creativecommons.org/publicdomain/zero/1.0/legalcode"
},
"author": {
    "name": "ytyaru",
    "sites": [
        "https://github.com/ytyaru",
        "https://twitter.com/ytyaru1",
        "https://mstdn.jp/@ytyaru",
        "https://profile.hatena.ne.jp/ytyaru/"
    ]
},
"readme": {
    "summary": "アクセストークンを返す。",
    "details": "所定のファイルにトークンを保存しておく。コマンド引数で指定されたドメインとユーザ名で絞り込む。最初に見つかったトークンを返す。見つからなければなにも返さない。",
    "features": [
        ["トークンのハードコーディングを防ぐ。", "これにて次のケースによるトークンの漏洩を防ぐ。後ろからディスプレイを覗かれる。キーロガーで送信される。誤ってトークンをハードコーディングしたコードをGitHubなどにアップロードする。"]
    ],
    "notes": [
        ["トークンは平文で保存する。", "保存されたファイルを見られたらトークンが盗まれてしまう。OSのログイン・パスワードなどで防ぐこと。"],
        ["トークンを新しく生成しない。", "OAuthのAPIにはパスワードなどからトークンを新規生成するものがある。だが本アプリにそのような機能はない。サービス提供サイトの操作やAPIなど、何らかの方法によりアクセストークンを取得する必要がある。その後、トークンを所定のファイルパスに、所定の形式で書き込むことで機能する。"],
        ["スコープは文字列の完全一致検索である。", "ふつうスコープはread:followsのように小カテゴリを持っている。だが本アプリに少カテゴリの概念はない。もし少カテゴリがあれば、コマンド引数にread:followsを渡したとき、ファイルから大カテゴリのreadをもつトークンも対象になるはず。しかし本アプリオでは対象外。文字列が完全一致したスコープしか検索できない。"]
    ]
}
}
